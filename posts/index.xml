<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on The Happler</title>
    <link>https://fazz.github.io/posts/</link>
    <description>Recent content in Posts on The Happler</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 27 Apr 2022 08:00:00 +0200</lastBuildDate><atom:link href="https://fazz.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to initialize multiple Python 3 virtual environments with each their own version of Python</title>
      <link>https://fazz.github.io/posts/software/2022-04-27-python-multiversion/</link>
      <pubDate>Wed, 27 Apr 2022 08:00:00 +0200</pubDate>
      
      <guid>https://fazz.github.io/posts/software/2022-04-27-python-multiversion/</guid>
      <description>Introduction and constraints Any serious tinkerer needs a handful of CPython versions on their environment, readily available. No? You poor bastard. Anyways&amp;hellip;
The process assumes that you compile CPython yourself. You may also grab precompiled binaries, if you want to.
The whole process is based on Ubuntu 20.04 LTS, other distributions/OSes may have it differently.
The mechanism is based on the virtualenv package: https://pypi.org/project/virtualenv/
virtualenv assumes Python version 3.5+ (from the 3.</description>
    </item>
    
    <item>
      <title>Information Security Resource bundle</title>
      <link>https://fazz.github.io/posts/infosec/information-security-resource-bundle/</link>
      <pubDate>Sat, 13 Feb 2021 08:02:01 +0200</pubDate>
      
      <guid>https://fazz.github.io/posts/infosec/information-security-resource-bundle/</guid>
      <description>Advisories  KPN Security Policy https://ciso-ksp.kpnnet.org/ , notably:  Application of cryptographic rules https://ciso-ksp.kpnnet.org/document/detail?id=KSP-RE-410 Certificate pinning and mutual authentication https://ciso-ksp.kpnnet.org/document/detail?id=KSP-RE-344    Blogs Cryptography  Dhole Moments (Soatok) https://soatok.blog/b/  Important snippets  Thomas H. Ptacek on TLS https://news.ycombinator.com/item?id=25380301  </description>
    </item>
    
    <item>
      <title>Software Engineering Resource bundle</title>
      <link>https://fazz.github.io/posts/software/software-engineering-resource-bundle/</link>
      <pubDate>Sat, 13 Feb 2021 08:02:01 +0200</pubDate>
      
      <guid>https://fazz.github.io/posts/software/software-engineering-resource-bundle/</guid>
      <description>Blogs   James Koppel http://www.pathsensitive.com/
 Esp. http://www.pathsensitive.com/2021/03/why-programmers-shouldnt-learn-theory.html    Tom Gamon https://tomgamon.com/posts/
  </description>
    </item>
    
    <item>
      <title>AoC 2020, 25. päev</title>
      <link>https://fazz.github.io/posts/aoc2020/aoc2020-25/</link>
      <pubDate>Fri, 25 Dec 2020 07:25:01 +0200</pubDate>
      
      <guid>https://fazz.github.io/posts/aoc2020/aoc2020-25/</guid>
      <description>Ülesanne Siin: https://adventofcode.com/2020/day/25
Hüppab Whitfield, valmistub Martin Esimese jõulupüha hommikuks pakuti murdmiseks lahjat Diffie-Hellmani võtmekehtestust1. Õige ka, eilse vorsti peale peabki midagi lahjat olema.
Kuigi lahendus on toore jõuründe teema, siis neile, kes asjaga kokku pole puutunud: Diffie-Hellmani võtmekehtestus on selline põhimõtteliselt iidne kuid geniaalne tükk krüptograafilist aparatuuri, millele kas otse või oma derivaatide kaudu toetub sisuliselt kogu tänane internetiliikluse turvamine. Praktikas kasutatakse seda muidugi märksa suuremate ja märksa hoolikamalt valitud parameetritega kui siin ülesandes.</description>
    </item>
    
    <item>
      <title>AoC 2020, 19. päev</title>
      <link>https://fazz.github.io/posts/aoc2020-19/</link>
      <pubDate>Sat, 19 Dec 2020 08:02:01 +0200</pubDate>
      
      <guid>https://fazz.github.io/posts/aoc2020-19/</guid>
      <description>Ülesanne Siin: https://adventofcode.com/2020/day/19
Kuidas läheb? Ah, tead, regulaarselt&amp;hellip; Ülesandele peale vaadates on kohe selge, et reeglid kujutavad endast lihtsamat sorti regulaarse keele grammatikat (eriti oluline on selle kinnitamiseks fraas there are no loops in the rules). Arvud on mitteterminalid ning tähed terminalid.
Sisendis antud reeglite transleerimine Pythoni $re$ jaoks sobivateks reegliteks on suuresti tagajalgade töö, kuigi esimesel katsel suutsin ma ikka üle mõtelda ja selle liiga keeruliselt lahendada.
Teine osa on huvitavam ja seal tõmmatakse hooletul lugejal vaip alt ära.</description>
    </item>
    
    <item>
      <title>AoC 2020, 16. päev</title>
      <link>https://fazz.github.io/posts/aoc2020-16/</link>
      <pubDate>Wed, 16 Dec 2020 08:02:01 +0200</pubDate>
      
      <guid>https://fazz.github.io/posts/aoc2020-16/</guid>
      <description>Ülesanne Siin: https://adventofcode.com/2020/day/16
Practice what you preach ehk ärge käige mu tegude järgi Ei ole väga keeruline ülesanne, eriti kui oled lapsena loogilisi elimineerimismänge piisavalt paberi peal teinud (teate küll, need mida praegu Facebookis ringi kedratakse kirjaga &amp;ldquo;ainult Einstein suudab lahendada&amp;rdquo; &amp;ndash; vanasti tehti selliseid suvisel koolivaheajal ajaviiteks, kui paljakäsi huntide jahtimisest villand sai).
Sellest hoolimata suutsin esimest osa lahendades istutada teise osa jaoks sellise bugiseemne, et lõpuks vaatasin, kuidas andmed enne viimast korrutamist katki on, parandasin käsitsi ära, korrutasin õige tulemuse kokku ja siis hakkasin bugi otsima.</description>
    </item>
    
    <item>
      <title>AoC 2020, 15. päev</title>
      <link>https://fazz.github.io/posts/aoc2020-15/</link>
      <pubDate>Tue, 15 Dec 2020 08:02:01 +0200</pubDate>
      
      <guid>https://fazz.github.io/posts/aoc2020-15/</guid>
      <description>Ülesanne Siin: https://adventofcode.com/2020/day/15
Off by one. No, two. No, one. Minus zero. Fuck! Ma mõtlesin, et ma olen ainuke loll, kellel see ülesanne juhtme täiesti kokku ajab, aga ei, Redditit ja Facebooki lugedes on sellised PALJU.
See ülesanne on vaja ette sööta kõigile, kes arvavad, et C-s annab küll igapidi korrektset ja turvalist programmi kirjutada. Väga õpetlik kraam.
Tegelikult on tegemist täiesti vana ja tuntud teoreetilise konstruktsiooni variantsiooniga, nimelt Van Eck&amp;rsquo;i jadaga (iga päev õpid midagi, aga OEIS on ennegi raskest kohast üle aidanud).</description>
    </item>
    
    <item>
      <title>AoC 2020, 14. päev</title>
      <link>https://fazz.github.io/posts/aoc2020-14/</link>
      <pubDate>Mon, 14 Dec 2020 08:02:01 +0200</pubDate>
      
      <guid>https://fazz.github.io/posts/aoc2020-14/</guid>
      <description>Ülesanne Siin: https://adventofcode.com/2020/day/14
Binaarväärtusi nikerdades võib omale kergesti unaaroperaatoriga näppu lõigata Lihtne kuid salakavala sõnastusega bitinikerdus.
Päeva esteetikapunktid said kõik need programmid, mis täiesti ebapühal moel $string::replace()$ abil bitti nikerdasid. See viis selgelt lihtsama tulemuseni kui päris bittide nikerdamine.
Esimene osa kell 07:17, teine osa 08:02. Nõrk.
Lahendus Lahenduskäik siin, lappasin tagantjärgi mõlemad osad kokku aga ikka on mõttetult pikk programm: https://github.com/fazz/aoc/blob/master/aoc2020/day14.py</description>
    </item>
    
    <item>
      <title>AoC 2020, 13. päev</title>
      <link>https://fazz.github.io/posts/aoc2020-13/</link>
      <pubDate>Sun, 13 Dec 2020 08:02:01 +0200</pubDate>
      
      <guid>https://fazz.github.io/posts/aoc2020-13/</guid>
      <description>Ülesanne Siin: https://adventofcode.com/2020/day/13
Sebi mis Sa sebid, algarvud tulevad lõpuks ikka nurgast Lõpuks ometi ülesanne, mis hingele (loe: võtab kõvasti vanduma, sest tagumikutunne ütleb, et lahendus on siinsamas, aga pea ei jaga ära pühapäeva hommikul). Kass istus ainult vaikselt kõrval ja kuulas hingestatud pobinat kolmes kohalikus keeles.
Esimene osa on suhteliselt lihtne (mis muidugi ei tähenda, et ma poleks suutnud maailma kõige tobedamat programmeerimisviga sisse teha esimese hooga).
Valem konkreetse bussi ooteaja saamiseks on järgmine:</description>
    </item>
    
    <item>
      <title>AoC 2020, 8. päev</title>
      <link>https://fazz.github.io/posts/aoc2020-08/</link>
      <pubDate>Tue, 08 Dec 2020 08:02:01 +0200</pubDate>
      
      <guid>https://fazz.github.io/posts/aoc2020-08/</guid>
      <description>Ülesanne Siin: https://adventofcode.com/2020/day/8
AI parandab Su programmi ise ära ja teeb veel pai ka ja puhub peale Väikeste virtuaalmasinate kirjutamine ei ole kuigi huvitav, kui seda juba paar korda teinud oled, aga ma siiralt loodan, et mõne noore inimese kehutab selline asi assembleris programmeerima. Obskuursed ja salapärased oskused tulevad elus kasuks.
Esimene osa on lihtne tsüklituvastus - hoia aiva läbitud $pc$-d meeles ja looda, et mälu otsa ei saa (ei ta saa).</description>
    </item>
    
    <item>
      <title>AoC 2020, 6. päev</title>
      <link>https://fazz.github.io/posts/aoc2020-06/</link>
      <pubDate>Sun, 06 Dec 2020 08:02:01 +0200</pubDate>
      
      <guid>https://fazz.github.io/posts/aoc2020-06/</guid>
      <description>Ülesanne Siin: https://adventofcode.com/2020/day/6
Chuck Norris vastas kõik küsimused ära, ka need, mida polnud küsitud Hästi nunnu pisike ülesanne.
Esimene reaktsioon oli lahendada bitmapi abil, 5. päeva ülesande inertsist, aga ei, see on hoopis lihtsalt harjutus hulgateooria põhitõdede kallal (kuigi ka bitmapi abil saab muidugi).
Kui iga rida parsida tähtede kaupa hulgaks, siis igas grupis on esimese poole vastuseks nende hulkade ühisosa elementide arv ja teise poole vastuseks hulkade ühendi elementide arv.</description>
    </item>
    
    <item>
      <title>AoC 2020, 4. päev</title>
      <link>https://fazz.github.io/posts/aoc2020-04/</link>
      <pubDate>Fri, 04 Dec 2020 08:02:01 +0200</pubDate>
      
      <guid>https://fazz.github.io/posts/aoc2020-04/</guid>
      <description>Ülesanne Siin: https://adventofcode.com/2020/day/4
Parsi mis Sa parsid, pärast on ikka SEGFAULT Aaaa&amp;hellip; loll ülesanne.
Mulle ei meeldi selline põlve otsas parserite nikerdamine, võib-olla ka sellepärast, et sisemine turvainsener läheb sellise töö peale kupla.
Kui mul peaks aega üle jääma, kirjutan selle ülesande lahenduse mõne vettpidava parseri peale, aga pigem ei jää. Aega üle siis.
Lahendus Lahenduskäik siin: https://github.com/fazz/aoc/blob/master/aoc2020/day04.py</description>
    </item>
    
    <item>
      <title>AoC 2020, 3. päev</title>
      <link>https://fazz.github.io/posts/aoc2020-03/</link>
      <pubDate>Thu, 03 Dec 2020 08:02:01 +0200</pubDate>
      
      <guid>https://fazz.github.io/posts/aoc2020-03/</guid>
      <description>Ülesanne Siin: https://adventofcode.com/2020/day/3
Küll on kena kelguga Mulle kohe meeldivad sellised ülesanded, mida saab modulo aritmeetikaga lahendada. Ei teagi miks, amatöörkrüptograafi rõõmud vist.
Teisalt on see selline ülesanne, mis on meelega sõnastatud hästi keerulisena ja kunst on ära tabada, milles on tegelikult uba. Brace yourselves, kes esimest aastat ülesandeid lahendavad, see läheb iga päevaga aiva hullemaks &amp;ndash; eelmisel aastal oli kaalukeeleks vist 18. päeva ülesanne, kus inimesed jäidki ülesandepüstitusse kinni, selmet vaadata graafi, mille kõrvad sealt tagant välja paistsid.</description>
    </item>
    
    <item>
      <title>AoC 2020, 2. päev</title>
      <link>https://fazz.github.io/posts/aoc2020-02/</link>
      <pubDate>Wed, 02 Dec 2020 08:02:01 +0200</pubDate>
      
      <guid>https://fazz.github.io/posts/aoc2020-02/</guid>
      <description>Ülesanne Siin: https://adventofcode.com/2020/day/2
Võimatu missioon: süntaksiharjutusi Tänase ülesande kohta polegi muud öelda, kui et see oli lihtsalt Pythoni süntaksi ja teekide meeldetuletamiseks. Punkte said need, kes kõige varem üles tõusid ja kõige kiiremini trükkisid. Mina nende hulka ei kuulunud, oli vaja magada.
Lahendus Lahenduskäik tekib ühel päeval siia: https://github.com/fazz/aoc/blob/master/aoc2020/day02.py</description>
    </item>
    
    <item>
      <title>AoC 2020, 1. päev</title>
      <link>https://fazz.github.io/posts/aoc2020/aoc2020-01/</link>
      <pubDate>Tue, 01 Dec 2020 07:17:01 +0200</pubDate>
      
      <guid>https://fazz.github.io/posts/aoc2020/aoc2020-01/</guid>
      <description>Ülesanne Siin: https://adventofcode.com/2020/day/1
Sissejuhatus Esialgu läks pahasti, ma ei saanud oma sisendit kätte &amp;ndash; 503 Gateway Timeout, aga kuna ma mõisa peale ei võistle, siis las ta olla. Teadaolevalt on ainult ühel eelmisel aastal ühe ülesandega olnud selliseid probleeme, mis nõudsid tolle konkreetse ülesande mittearvestamist.
EDIT: Because of an outage during the day 1 puzzle unlock, day 1 is worth no points. Naah.
Vihje Nagu ikka, on esimesed ülesanded soojenduseks, ei midagi komplitseeritut.</description>
    </item>
    
  </channel>
</rss>
