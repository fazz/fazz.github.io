<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>aoc2023 on The Happler</title>
    <link>https://fazz.github.io/tags/aoc2023/</link>
    <description>Recent content in aoc2023 on The Happler</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 07 Dec 2023 08:00:00 +0200</lastBuildDate>
    <atom:link href="https://fazz.github.io/tags/aoc2023/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>AoC 2023, 7. päev</title>
      <link>https://fazz.github.io/posts/aoc2023/aoc2023-07/</link>
      <pubDate>Thu, 07 Dec 2023 08:00:00 +0200</pubDate>
      <guid>https://fazz.github.io/posts/aoc2023/aoc2023-07/</guid>
      <description>Ülesanne Siin: https://adventofcode.com/2023/day/7
Lahendus Kaartidele järjekorra andmiseks ühtegi võluvitsa ei ole: tuleb nad lihtsalt programmikoodi sellises järjekorras kirja panna, nagu ülesanne ette näeb. Seda ka teises osas, kus järjekord on teistsugune.
Esimese poole lahendamine on Pythonis üsna trikkideta: tuleb realiseerida ülesandekohane komparaatorfunktsioon ning käte list selle abil õigesse järjekorda sorteerida.
Teise poolega on natuke keerulisem, kuivõrd komparaator peab valima mitme võimaliku J asenduse vahel. Küll aga tuleb tähele panna, et J-i on mõtet asendada ainult selliste kaartidega, mis on juba käes olemas: sellised asendused annavad alati tugevama tulemuse kui asendamine mõne kaardiga väljastpoolt.</description>
    </item>
    <item>
      <title>AoC 2023, 6. päev</title>
      <link>https://fazz.github.io/posts/aoc2023/aoc2023-06/</link>
      <pubDate>Wed, 06 Dec 2023 08:00:00 +0200</pubDate>
      <guid>https://fazz.github.io/posts/aoc2023/aoc2023-06/</guid>
      <description>Ülesanne Siin: https://adventofcode.com/2023/day/6
Lahendus Ülesande esimene pool lahendub lihtsa jõuvõttega: tuleb itereerida üle võimalike saavutatavate teepikkuste ning panna kirja, kui mitu neist kvalifitseerub. Jõuvõte on lihtsasti programmeeritav, ei tohi ju unustada, et võistlus käib ka aja peale.
Ka teine pool on sama jõuvõttega lahendatav, ma olen isegi natuke üllatunud, et on, sest siin oleks olnud võimalus lihtsad lahendused välistada.
Aga igal juhul võtab teise poole jõuvõte nii kaua aega, et korraliku programmeerija au ei luba sellise lahendusega leppida.</description>
    </item>
    <item>
      <title>AoC 2023, 5. päev</title>
      <link>https://fazz.github.io/posts/aoc2023/aoc2023-05/</link>
      <pubDate>Tue, 05 Dec 2023 08:00:00 +0200</pubDate>
      <guid>https://fazz.github.io/posts/aoc2023/aoc2023-05/</guid>
      <description>Ülesanne Siin: https://adventofcode.com/2023/day/5
Lahendus Ülesande esimene pool on päris lihtne, sest kui keeruline saab olla täisarvude mingisse lõiku kuuluvuse kontroll. Aga mõistagi, kui vaadata arvude suurusjärke, tekib selge teadmine, et teises pooles on mingit teravamat pirukat oodata.
No muidugi nii läkski. Mõtlesin üle, kirjutasin kokku päris paljusõnalise lahenduse, tegin sinna sisse mitu off-by-one viga ja raiskasin hullusti aega.
Töötav loogika on aga lihtne:
Iga sisendiks olev vahemik tuleb jagada kolmeks: vasak, keskmine, parem, kusjuures lihtsamapoolse matemaatilise avaldisega on võimalik igal juhul väljendada seda, et kui vastav osa puudub (näiteks: kui teisendusreegel katab vahemiku täielikult, siis vasak ja parem pool puuduvad), siis on tema pikkus $0$.</description>
    </item>
    <item>
      <title>AoC 2023, 4. päev</title>
      <link>https://fazz.github.io/posts/aoc2023/aoc2023-04/</link>
      <pubDate>Mon, 04 Dec 2023 08:00:00 +0200</pubDate>
      <guid>https://fazz.github.io/posts/aoc2023/aoc2023-04/</guid>
      <description>Ülesanne Siin: https://adventofcode.com/2023/day/4
Lahendus Ülesande esimeses pooles ei ole vaja teha muud, kui lugeda kokku, kui suur on iga kaardi võidunumbrite hulk ($c$) ning skoori saamiseks summeerida kokku $2^{c-1}$, arvestades erijuhtu, et $c=0$ korral on skoor $0$. Ehk siis tegelikult töötab ka $\lfloor 2^{c-1}\rfloor$ kokkusummeerimine.
Teine pool on üks neist reetlikest ülesandepüstitustest, mis lausa kutsub oma andmestruktuuri kasvatama. Ei, sellesse lõksu ei ole vaja astuda.
On vaja pidada ainult arvestust selle üle, kui palju meil mingeid kaarte on (algul $1$) ning seejärel iga võidu korral kasvatada vastavate kaartide arvu niipalju, kui meil parasjagu menetletavat kaarti käes on.</description>
    </item>
    <item>
      <title>AoC 2023, 3. päev</title>
      <link>https://fazz.github.io/posts/aoc2023/aoc2023-03/</link>
      <pubDate>Sun, 03 Dec 2023 08:00:00 +0200</pubDate>
      <guid>https://fazz.github.io/posts/aoc2023/aoc2023-03/</guid>
      <description>Ülesanne Siin: https://adventofcode.com/2023/day/3
Lahendus Rumal on inimene, kes on rumal. Mul oli hommikul umbes 20 minutit selleks, et ülesanne lahendada, ja sellest oleks pidanud piisama vabalt vähemalt esimese poole jaoks, aga kui ikka ei oska mõista, et realõppu tuleb kohelda kui arvu lõpetavat sümbolit, no siis pole midagi teha. Tuleb oodata õhtuni, mis on teadupärast hommikust targem ja siis lahendada.
Lahenduskäik: https://github.com/fazz/aoc/blob/master/aoc2023/day03.py</description>
    </item>
    <item>
      <title>AoC 2023, 2. päev</title>
      <link>https://fazz.github.io/posts/aoc2023/aoc2023-02/</link>
      <pubDate>Sat, 02 Dec 2023 08:00:00 +0200</pubDate>
      <guid>https://fazz.github.io/posts/aoc2023/aoc2023-02/</guid>
      <description>Ülesanne Siin: https://adventofcode.com/2023/day/2
Lahendus Suuresti on tegu ülesandega, mis taandub sisendi parsimisele, seega ei oskagi suurt midagi kommenteerida. Ühtlasi tundun olevat ka maailma mastaabis päris kiire parsija:
That&#39;s the right answer! You are one gold star closer to restoring snow operations. You got rank 303 on this star&#39;s leaderboard.
That&#39;s the right answer! You are one gold star closer to restoring snow operations. You got rank 533 on this star&#39;s leaderboard.</description>
    </item>
    <item>
      <title>AoC 2023, 1. päev</title>
      <link>https://fazz.github.io/posts/aoc2023/aoc2023-01/</link>
      <pubDate>Fri, 01 Dec 2023 08:00:00 +0200</pubDate>
      <guid>https://fazz.github.io/posts/aoc2023/aoc2023-01/</guid>
      <description>AoC, A.D. 2023 Elu on näidanud, et AoC ülesannete lahendamine tuleb mul päris hästi välja, aga ülesannetele&amp;ndash;lahendustele analüüside kirjutamine on märksa raskem töö. Seega, mis sitasti, see uuesti.
Ülesanne Siin: https://adventofcode.com/2023/day/1
Lahendus Päris mitmel spordialal kehtib reegel &amp;ldquo;võidab see, kes teeb kõige vähem vigu&amp;rdquo;. Nii ka siin. Ma ei hakka oma rumalaid vigu selgitama ega vabandama, aga kokku läks õnnetud 22 minutit, et tulemus kirja saada.
Esimese päeva kohta on ülesande teine pool päris ilusa nipiga, nipp oma korda näeb välja täpselt selline, et ülesandepüstituse kirjutamine ChatGPT jaoks mõttetult kaua aega võtaks (spekulatsioon muidugi).</description>
    </item>
  </channel>
</rss>
